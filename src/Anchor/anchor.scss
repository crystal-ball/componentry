/* componentry/src/Anchor/anchor */

// The `.btn-link` style button has the font styles of an anchor AND all of the
// regular padding of a button. For ðŸ’¯ Accessibility we want to have buttons
// that look exactly like links for in application triggers, `anc`
// creates a button styled exactly like an anchor. This should be used for any
// application actions that are not route navigations.
.a {
  -webkit-appearance: none !important; // Remove Chrome native button styling
  display: inline-block;
  padding: 0;
  background-color: transparent;
  cursor: pointer;

  // Set anchor font styles
  color: $anchor-color;
  font-family: $font-family-sans-serif;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  letter-spacing: 0;
  text-transform: none;

  user-select: auto;
  vertical-align: baseline;
  white-space: normal;

  border: none;
  border-radius: 0;

  text-decoration: $anchor-decoration;
  -webkit-text-decoration-skip: objects; // Remove gaps in links underline in iOS 8+ and Safari 8+.

  &:hover {
    color: $anchor-hover-color;
    text-decoration: $anchor-hover-decoration;
  }

  &:active {
    color: $anchor-active-color;
    text-decoration: $anchor-active-decoration;
  }

  // When no href is passed the Anchor component will include disabled, which
  // we use to remove the stylesof the anchor
  // See https://github.com/twbs/bootstrap/issues/19402
  &.disabled {
    color: $anchor-disabled-color;
    text-decoration: $anchor-disabled-decoration;
  }
}

@if ($style-dom-elements) {
  a {
    @extend .a;
  }
}

@each $color, $value in $theme-colors {
  // --- Theme variant
  .a-#{$color} {
    color: $value;

    @include hover-focus {
      color: darken($value, 10%);
    }
  }
}
