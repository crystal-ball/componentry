/* componentry/src/Button/button */

/*
 * Button customizations to document:
 * - Disabled state overrides
 * - Btn states override
 */

$btn-defaults: ();
@each $color, $value in $theme-colors {
  $btn-defaults: map-merge(
    $btn-defaults,
    (
      // --- Background color
      #{$color}-bg: #{gradient-background($value)},
      #{$color}-hover-bg: #{gradient-background(darken($value, 7.5%))},
      #{$color}-active-bg: #{gradient-background(darken($value, 10%))},
      #{$color}-disabled-bg: #{gradient-background($value)},
      // --- Border color
      #{$color}-border-color: #{$value},
      #{$color}-hover-border-color: #{darken($value, 10%)},
      #{$color}-active-border-color: #{darken($value, 12.5%)},
      #{$color}-disabled-border-color: #{$value},
      // --- Color
      #{$color}-color: #{color-yiq($value)},
      #{$color}-hover-color: #{color-yiq($value)},
      #{$color}-active-color: #{color-yiq($value)},
      #{$color}-disabled-color: #{color-yiq($value)}
    )
  );
}

$btn-states-map: map-merge($btn-defaults, $btn-states);

//
// Base styles
//

.btn {
  border: $btn-border-width solid transparent;
  @include border-radius($btn-border-radius);
  display: inline-block;
  font-size: $font-size-base;
  font-weight: $btn-font-weight;
  letter-spacing: $btn-letter-spacing;
  line-height: $btn-line-height;
  padding: $btn-padding-y $btn-padding-x;
  text-align: center;
  text-transform: $btn-text-transform;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;

  // ‚ÑπÔ∏è The box-shadow styles remain static throughout hover/active states
  @include box-shadow($btn-box-shadow);

  // $btn-transition default includes color, background-color, border-color
  @include transition($btn-transition);

  // Default disabled styles remove pointer and adjust opacity to indicate
  // button is disabled
  &.disabled {
    border-width: $btn-disabled-border-width;
    opacity: $btn-disabled-opacity;
  }
}

//
// Theme color variants
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    background: map-get($btn-states-map, #{$color}-bg);
    border-color: map-get($btn-states-map, #{$color}-border-color);
    color: map-get($btn-states-map, #{$color}-color);

    &:hover {
      background: map-get($btn-states-map, #{$color}-hover-bg);
      border-color: map-get($btn-states-map, #{$color}-hover-border-color);
      color: map-get($btn-states-map, #{$color}-hover-color);
    }

    &:active,
    &.active {
      background: map-get($btn-states-map, #{$color}-active-bg);
      border-color: map-get($btn-states-map, #{$color}-active-border-color);
      color: map-get($btn-states-map, #{$color}-active-color);
    }

    &.disabled {
      background: map-get($btn-states-map, #{$color}-disabled-bg);
      border-color: map-get($btn-states-map, #{$color}-disabled-border-color);
      color: map-get($btn-states-map, #{$color}-disabled-color);
    }
  }
}

// 'Link' theme color variant -  have the padding and alignment of a button with
// font styles matching anchors (can be used for things like secondary CTAs)
.btn-link {
  background-color: transparent;
  color: $link-color;
  font-weight: $font-weight-normal;
  // ü§î Should btn-link reset the text tansform and letter spacing?

  &:hover {
    background-color: transparent;
    border-color: transparent;
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &.disabled {
    color: $btn-link-disabled-color;
  }

  // No need for an active state here
}

//
// Outline button variants
//

@each $color, $value in $theme-colors {
  .btn-#{$color}.btn-outline {
    color: $value;
    background-color: transparent;
    background-image: none;
    border-color: $value;

    &:hover {
      color: color-yiq($value);
      background-color: $value;
      border-color: $value;
      @include gradient-bg($value);
    }

    &:active,
    &.active {
      border-color: $value;
      color: color-yiq($value);
      @include gradient-bg(darken($value, 7.5%));
    }

    &.disabled {
      color: $value;
      background-color: transparent;
    }
  }
}

//
// Button Sizes
//

@mixin button-size(
  $padding-y,
  $padding-x,
  $font-size,
  $line-height,
  $border-radius,
  $letter-spacing
) {
  @include border-radius($border-radius);
  font-size: $font-size;
  letter-spacing: $letter-spacing;
  line-height: $line-height;
  padding: $padding-y $padding-x;
}

.btn-lg {
  @include button-size(
    $btn-padding-y-lg,
    $btn-padding-x-lg,
    $font-size-lg,
    $btn-line-height-lg,
    $btn-border-radius-lg,
    $btn-letter-spacing-lg
  );
}

.btn-sm {
  @include button-size(
    $btn-padding-y-sm,
    $btn-padding-x-sm,
    $font-size-sm,
    $btn-line-height-sm,
    $btn-border-radius-sm,
    $btn-letter-spacing-lg
  );
}

//
// Anchor button
//

// The `.btn-link` style button has the font styles of an anchor AND all of the
// regular padding of a button. For üíØ Accessibility we want to have buttons
// that look exactly like links for in application triggers, `btn-anchor`
// creates a button styled exactly like an anchor. This should be used for any
// application actions that are not route navigations.

.btn-anchor {
  -webkit-appearance: none !important; // Remove Chrome native button styling
  display: inline-block;
  padding: 0;
  background-color: transparent;

  // Set anchor font styles
  color: $link-color;
  font-family: $font-family-sans-serif;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  letter-spacing: 0;
  text-transform: none;

  user-select: auto;
  vertical-align: baseline;
  white-space: normal;

  border: none;
  border-radius: 0;

  &:hover {
    background-color: transparent;
    border-color: transparent;
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &.disabled {
    color: $btn-link-disabled-color;
  }
}

//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  // ü§î Do we want to include this as a default library style? It's somewhat
  // opinionated and isn't based on "adding" a class to produce a style...
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}
