/* componentry/src/Button/button */

$btn-defaults: ();
@each $color, $value in $theme-colors {
  $btn-defaults: map-merge(
    $btn-defaults,
    (
      // --- Background color
      #{$color}-bg: #{gradient-bg($value)},
      #{$color}-hover-bg: #{gradient-bg(darken($value, 7.5%))},
      #{$color}-active-bg: #{gradient-bg(darken($value, 10%))},
      #{$color}-disabled-bg: #{gradient-bg($value)},
      // --- Border color
      #{$color}-border-color: #{$value},
      #{$color}-hover-border-color: #{darken($value, 10%)},
      #{$color}-active-border-color: #{darken($value, 12.5%)},
      #{$color}-disabled-border-color: #{$value},
      // --- Color
      #{$color}-color: #{color-yiq($value)},
      #{$color}-hover-color: #{color-yiq($value)},
      #{$color}-active-color: #{color-yiq($value)},
      #{$color}-disabled-color: #{color-yiq($value)}
    )
  );
}

$btn-states-map: map-merge($btn-defaults, $btn-states);

// --------------------------------------------------------
// Button base styles

.btn {
  -webkit-appearance: button;
  cursor: pointer;
  border: $btn-border-width solid transparent;
  @include border-radius($btn-border-radius);
  display: inline-block;
  font-family: inherit;
  font-size: $font-size-base;
  font-weight: $btn-font-weight;
  letter-spacing: $btn-letter-spacing;
  line-height: $btn-line-height;
  margin: 0;
  padding: $btn-padding-y $btn-padding-x;
  text-align: center;
  text-transform: $btn-text-transform;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  // Setting the text-decoration is required for anchors using the btn styles
  text-decoration: $btn-decoration;

  // ℹ️ The box-shadow styles remain static throughout hover/active states
  box-shadow: box-shadow($btn-box-shadow);

  // $btn-transition default includes color, background-color, border-color
  @include transition($btn-transition);

  &:hover {
    text-decoration: $btn-hover-decoration;
  }

  &:active {
    text-decoration: $btn-active-decoration;
  }

  &.disabled {
    border-width: $btn-disabled-border-width;
    opacity: $btn-disabled-opacity;
  }
}

// --------------------------------------------------------
// Theme color variants

@each $color, $value in $theme-colors {
  // --- Theme variant
  .btn-#{$color} {
    background: map-get($btn-states-map, #{$color}-bg);
    border-color: map-get($btn-states-map, #{$color}-border-color);
    color: map-get($btn-states-map, #{$color}-color);

    &:hover {
      background: map-get($btn-states-map, #{$color}-hover-bg);
      border-color: map-get($btn-states-map, #{$color}-hover-border-color);
      color: map-get($btn-states-map, #{$color}-hover-color);
    }

    &:active,
    &.active {
      background: map-get($btn-states-map, #{$color}-active-bg);
      border-color: map-get($btn-states-map, #{$color}-active-border-color);
      color: map-get($btn-states-map, #{$color}-active-color);
    }

    &.disabled {
      background: map-get($btn-states-map, #{$color}-disabled-bg);
      border-color: map-get($btn-states-map, #{$color}-disabled-border-color);
      color: map-get($btn-states-map, #{$color}-disabled-color);
    }
  }

  // --- Outline variant
  .btn-outline-#{$color} {
    background: transparent;
    border-color: $value;
    color: $value;

    &:hover {
      background: gradient-bg($value);
      border-color: $value;
      color: color-yiq($value);
    }

    &:active,
    &.active {
      background: gradient-bg(darken($value, 7.5%));
      border-color: $value;
      color: color-yiq($value);
    }

    &.disabled {
      background: transparent;
      border-color: $value;
      color: $value;
    }
  }
}

// 'Link' theme color variant has the padding and alignment of a button with
// font styles matching anchors (can be used for things like secondary CTAs)
.btn-link {
  background: transparent;
  color: $anchor-color;
  font-weight: $font-weight-normal;
  box-shadow: none;
  // 🤔 Should btn-link reset the text tansform and letter spacing?

  &:hover {
    background: transparent;
    border-color: transparent;
    color: $anchor-hover-color;
    text-decoration: $anchor-hover-decoration;
  }

  &:active {
    color: $anchor-active-color;
    text-decoration: $anchor-active-decoration;
  }

  &.disabled {
    color: $btn-link-disabled-color;
  }
}

.btn-outline-link {
  background: transparent;
  border-color: $anchor-color;
  color: $anchor-color;
  font-weight: $font-weight-normal;
  box-shadow: none;
}

// --------------------------------------------------------
// Block buttons

.btn-block {
  display: block;
  width: 100%;
}

// --------------------------------------------------------
// Button sizes

.btn-lg {
  @include border-radius($btn-border-radius-lg);
  font-size: $font-size-lg;
  letter-spacing: $btn-letter-spacing-lg;
  line-height: $btn-line-height-lg;
  padding: $btn-padding-y-lg $btn-padding-x-lg;
}

.btn-sm {
  @include border-radius($btn-border-radius-sm);
  font-size: $font-size-sm;
  letter-spacing: $btn-letter-spacing-sm;
  line-height: $btn-line-height-sm;
  padding: $btn-padding-y-sm $btn-padding-x-sm;
}


/* ~componentry/src/ButtonGroup/button-group */

//
// Container div
//

// Make the div behave like a button
.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle; // match .btn alignment given font-size hack above
  font-size: $btn-group-font-size;

  > .btn {
    position: relative;
    flex: 0 1 auto;
    border: none;
    font-size: inherit;
  }
}

.btn-group {
  > .btn:first-child {
    margin-left: 0;
  }

  // Reset rounded corners
  > .btn:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  > .btn:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

//
// Sizes
//

.btn-group-sm {
  font-size: $btn-group-font-size-sm;

  > .btn {
    letter-spacing: $btn-letter-spacing-sm;
    line-height: $btn-line-height-sm;
    padding: $btn-group-btn-padding-y-sm $btn-group-btn-padding-x-sm;
  }
}
.btn-group-lg {
  font-size: $btn-group-font-size-lg;

  > .btn {
    letter-spacing: $btn-letter-spacing-lg;
    line-height: $btn-line-height-lg;
    padding: $btn-group-btn-padding-y-lg $btn-group-btn-padding-x-lg;
  }
}

//
// Vertical button groups
//

.btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  .btn {
    width: 100%;
  }

  > .btn + .btn {
    margin-left: 0;
  }

  // Reset rounded corners
  > .btn:not(:last-child) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
  > .btn:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
}

// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `clip`. We cannot use
// `display: none;` or `visibility: hidden;` as that also hides the popover.
// Simply visually hiding the inputs via `opacity` would leave them clickable in
// certain cases which is prevented by using `clip` and `pointer-events`.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 and
// https://github.com/twbs/bootstrap/pull/14559 for more information.

.btn-group {
  > .btn {
    margin-bottom: 0; // Override default `<label>` value

    input[type='radio'] {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
    }
  }
}
