/* componentry/src/Button/button */

/**
 * BUTTONS
 */

$btn-defaults: ();
@each $color, $value in $theme-colors {
  $btn-defaults: map-merge(
    $btn-defaults,
    (
      // --- Background color
      #{$color}-bg: #{gradient-background($value)},
      #{$color}-hover-bg: #{gradient-background(darken($value, 7.5%))},
      #{$color}-active-bg: #{gradient-background(darken($value, 10%))},
      #{$color}-disabled-bg: #{gradient-background($value)},
      // --- Border color
      #{$color}-border-color: #{$value},
      #{$color}-hover-border-color: #{darken($value, 10%)},
      #{$color}-active-border-color: #{darken($value, 12.5%)},
      #{$color}-disabled-border-color: #{$value},
      // --- Color
      #{$color}-color: #{color-yiq($value)},
      #{$color}-hover-color: #{color-yiq($value)},
      #{$color}-active-color: #{color-yiq($value)},
      #{$color}-disabled-color: #{color-yiq($value)}
    )
  );
}

$btn-states-map: map-merge($btn-defaults, $btn-states);

//
// Base styles
//

.btn {
  border: $btn-border-width solid transparent;
  @include border-radius($btn-border-radius);
  display: inline-block;
  font-size: $font-size-base;
  font-weight: $btn-font-weight;
  letter-spacing: $btn-letter-spacing;
  line-height: $btn-line-height;
  padding: $btn-padding-y $btn-padding-x;
  text-align: center;
  text-transform: $btn-text-transform;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  // Setting the text-decoration is required for anchors using the btn styles
  text-decoration: $btn-decoration;

  // ‚ÑπÔ∏è The box-shadow styles remain static throughout hover/active states
  @include box-shadow($btn-box-shadow);

  // $btn-transition default includes color, background-color, border-color
  @include transition($btn-transition);

  &:hover {
    text-decoration: $btn-hover-decoration;
  }

  &:active {
    text-decoration: $btn-active-decoration;
  }

  &.disabled {
    border-width: $btn-disabled-border-width;
    opacity: $btn-disabled-opacity;
  }
}

//
// Theme color variants
//

@each $color, $value in $theme-colors {
  // --- Theme variant
  .btn-#{$color} {
    background: map-get($btn-states-map, #{$color}-bg);
    border-color: map-get($btn-states-map, #{$color}-border-color);
    color: map-get($btn-states-map, #{$color}-color);

    &:hover {
      background: map-get($btn-states-map, #{$color}-hover-bg);
      border-color: map-get($btn-states-map, #{$color}-hover-border-color);
      color: map-get($btn-states-map, #{$color}-hover-color);
    }

    &:active,
    &.active {
      background: map-get($btn-states-map, #{$color}-active-bg);
      border-color: map-get($btn-states-map, #{$color}-active-border-color);
      color: map-get($btn-states-map, #{$color}-active-color);
    }

    &.disabled {
      background: map-get($btn-states-map, #{$color}-disabled-bg);
      border-color: map-get($btn-states-map, #{$color}-disabled-border-color);
      color: map-get($btn-states-map, #{$color}-disabled-color);
    }
  }

  // --- Outline variant
  .btn-outline-#{$color} {
    background: transparent;
    border-color: $value;
    color: $value;

    &:hover {
      background: gradient-background($value);
      border-color: $value;
      color: color-yiq($value);
    }

    &:active,
    &.active {
      background: gradient-background(darken($value, 7.5%));
      border-color: $value;
      color: color-yiq($value);
    }

    &.disabled {
      background: transparent;
      border-color: $value;
      color: $value;
    }
  }
}

// 'Link' theme color variant has the padding and alignment of a button with
// font styles matching anchors (can be used for things like secondary CTAs)
.btn-link {
  background: transparent;
  color: $link-color;
  font-weight: $font-weight-normal;
  // ü§î Should btn-link reset the text tansform and letter spacing?

  &:hover {
    background: transparent;
    border-color: transparent;
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:active {
    color: $link-active-color;
    text-decoration: $link-active-decoration;
  }

  &.disabled {
    color: $btn-link-disabled-color;
  }
}

//
// Block button
//

.btn-block {
  display: block;
  width: 100%;
}

//
// Button Sizes
//

.btn-lg {
  @include border-radius($btn-border-radius-lg);
  font-size: $font-size-lg;
  letter-spacing: $btn-letter-spacing-lg;
  line-height: $btn-line-height-lg;
  padding: $btn-padding-y-lg $btn-padding-x-lg;
}

.btn-sm {
  @include border-radius($btn-border-radius-sm);
  font-size: $font-size-sm;
  letter-spacing: $btn-letter-spacing-sm;
  line-height: $btn-line-height-sm;
  padding: $btn-padding-y-sm $btn-padding-x-sm;
}

//
// Containers
//

.btn-container-x {
  .btn + .btn {
    margin-left: $btn-container-spacing-x;
  }
}

.btn-container-y {
  .btn + .btn {
    margin-top: $btn-container-spacing-x;
  }
}
