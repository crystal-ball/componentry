/**
 *                                 ⚙️ Componentry default theme specification
 * -----------------------------------------------------------------------------
 *
 * Motivations & Guidelines:
 *
 * - Define theme domains in individual maps and compose the final theme using
 *   those maps. This enables users to more easily override shared parts of the
 *   theme and helps highlight which parts of the theme are shared.
 * - Use a naming pattern `<type>-<domain>` for naming maps, eg `theme-shades`,
 *   `border-shades`, `font-sizes`, `font-weights`
 * - Use semantic names or generic names, eg `primary` is a good generic name
 *   and `container` is a good semantic name. This allows users to have useful
 *   defaults with generics and useful fine tuned customizations with semantic
 *   names.
 */

@import './functions/sass';

// Theme maps' defaults
$theme: () !default;
$headings-base: () !default;

$font-family-primary: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
  'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
  'Segoe UI Symbol' !default;
$font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
  'Courier New', monospace !default;

/// Theme
$theme: map-assign((
  // --- BREAKPOINTS
  breakpoints: (
    sm: 0,
    md: 768px,
    lg: 1250px,
  ),

  // --- SPACING
  spacing: (
    xs: 4px,
    sm: 8px,
    md: 16px,
    lg: 24px,
    xl: 48px,
  ),

  // --- PALETTE
  palette: (
    gray: (
      '100': #f3f3f3,
      '200': #ced4da,
      '300': #b0b8be,
      '400': #495057,
      '500': #495057,
    ),
    primary: (
      '100': #d6d1fa,
      '200': #7461ef,
      '300': #4c34eb,
      '400': #4630d8,
      '500': #3d2abc,
    ),
    success: (
      '100': #32cd56,
      '200': #28a745,
      '300': #259b40,
      '400': #228e3b,
      '500': #228e3b,
    ),
    warning: (
      '100': #ffcd38,
      '200': #ffc107,
      '300': #edb307,
      '400': #d9a406,
      '500': #d9a406,
    ),
    error: (
      '100': #e35f6c,
      '200': #dc3545,
      '300': #cd3140,
      '400': #bb2d3b,
      '500': #bb2d3b,
    ),
    typography: (
      body: #1a1a1a,
      code: #ffadc0,
    ),
    backgrounds: (
      body: #fff
    ),
    borders: (),
    shadows: ()
  ),

  // --- TYPOGRAPHY
  typography: (
    font-families: (
      body: $font-family-primary,
      monospace: $font-family-monospace,
    ),
    font-sizes: (
      sm: 0.875rem,
      lg: 1.25rem,
      // Semantic
      body: 1rem,
      small: 87.5%,
      code: 0.875rem,
    ),
    font-weights: (
      light: 300,
      normal: 400,
      bold: 700,
    ),
    line-heights: (
      single: 1,
      body: 1.5,
    ),
    variants: (
      heading-1: map-merge((
        font-size: 3rem
      ), $headings-base),
      heading-2: map-merge((
        font-size: 2rem
      ), $headings-base),
      heading-3: map-merge((
        font-size: 1.5rem
      ), $headings-base),
      body: (
        font-size: 1rem,
      ),
    ),
  ),

  // --- BORDERS
  borders:(
    default: 1px solid #b0b8be,
  ),
  borderWidths: (),
  borderRadii: (),

  // --- SHADOWS
  shadows: (
    default: 0 0.5rem 1rem rgba(73, 80, 87, 0.15)
  )
), $theme);

// --------------------------------------------------------
// Theme functions

/// Convenience function for accessing a theme value by period delimited path
/// @param {string} $path Path to theme value
/// @return {*} Theme value at path
@function theme-get($path) {
  @return get($theme, $path);
}

// --------------------------------------------------------
// 3.0 Variables

// Used to set spacing between multiple paragraphs
$body-gutter: 1rem !default;
