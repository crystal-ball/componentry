// ========================================================
// Popovers
// ========================================================

/* Bootstrap popovers are inserted into the DOM at the end of the body on hover and
 * the location is assigned with transforms. Componentry instead sets the popover
 * parent container to position relative so that the absolute positioned content
 * displays relative to parent. This means that Componentry has custom popover styles
 * instead of using Bootstrap's
 */

// Container Element
.popover {
  // Default align content to dead center of trigger, the specific content styles can
  // then easily move to top/left/right/bottom where needed
  align-items: center;
  display: inline-flex; // flex instead of block for easier center alignment of content
  justify-content: center;
  position: relative;
}

// Content Element - The content element should be used to wrap a body/header element
.popover-content {
  @include border-radius($border-radius-lg);
  @include box-shadow($popover-box-shadow);
  // Reset font properties for consistent font styling regardless of cascading values
  @include reset-text();
  background-clip: padding-box;
  background-color: $popover-bg;
  border: $popover-border-width solid $popover-border-color;
  display: block;
  font-size: $font-size-sm;
  max-width: $popover-max-width;
  padding: $popover-inner-padding;
  position: absolute;
  // Allow breaking very long words so they don't overflow the popover's bounds
  word-wrap: break-word;
  z-index: $zindex-popover;

  .tip-container {
    align-items: center;
    display: flex;
    justify-content: center;
    overflow: hidden;
    position: absolute;
  }

  .tip {
    height: $popover-arrow-width * 2;
    overflow: hidden;
    width: $popover-arrow-width * 2;

    &:after {
      border: $popover-border-width solid $popover-border-color;
      // Do not use box-shadow mixin, output is wrapped in a check against
      // $enable-shadows, but we always want the arrow box-shadow included
      box-shadow: $popover-box-shadow;
      background: $popover-bg;
      content: '';
      height: $popover-arrow-width;
      position: absolute;
      transform: rotate(45deg);
      width: $popover-arrow-width;
    }
  }

  // ========================================================
  // Position Rules
  // ========================================================

  &.bottom .tip-container,
  &.top .tip-container {
    left: 0;
    width: 100%;
  }

  &.bottom {
    margin-top: $popover-arrow-width;
    top: 100%;

    .tip-container {
      bottom: 100%;
    }

    .tip:after {
      top: $popover-arrow-width * 1.5;
    }
  }

  &.top {
    bottom: 100%;
    margin-bottom: $popover-arrow-width;

    .tip-container {
      top: 100%;
    }

    .tip:after {
      bottom: $popover-arrow-width * 1.5;
    }
  }

  &.right .tip-container,
  &.left .tip-container {
    height: 100%;
    top: 0.5em; // We want the tip to be 1/2 of line height from the top for perfect center
  }

  &.right {
    left: 100%;
    margin-left: $popover-arrow-width;

    .tip-container {
      left: -$popover-arrow-width * 2;
    }

    .tip:after {
      left: $popover-arrow-width * 1.5;
    }
  }

  &.left {
    margin-right: $popover-arrow-width;
    right: 100%;

    .tip-container {
      right: -$popover-arrow-width * 2;
    }

    .tip:after {
      right: $popover-arrow-width * 1.5;
    }
  }
}

// Body element should contain popover inner content
.popover-body {
  padding: $popover-body-padding-y $popover-body-padding-x;
  color: $popover-body-color;
}

// Header element
.popover-header {
  padding: $popover-header-padding-y $popover-header-padding-x;
  margin-bottom: 0; // Reset the default from Reboot
  font-size: $font-size-base;
  color: $popover-header-color;
  background-color: $popover-header-bg;
  border-bottom: $popover-border-width solid darken($popover-header-bg, 5%);
  $offset-border-width: calc(#{$border-radius-lg} - #{$popover-border-width});
  @include border-top-radius($offset-border-width);

  &:empty {
    display: none;
  }
}
