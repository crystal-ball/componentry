{"version":3,"sources":["webpack:///./lib/utils/classnames.js","webpack:///./lib/Button.jsx","webpack:///./lib/utils/clean-props.js","webpack:///./lib/Card.jsx","webpack:///./lib/AriaHOC.jsx","webpack:///./lib/Toggleable/ToggleContent.jsx","webpack:///./lib/Toggleable/ToggleTrigger.jsx","webpack:///./lib/utils/dom.js","webpack:///./lib/Icon.jsx","webpack:///./lib/ListGroup/ListGroupItem.jsx","webpack:///./lib/ListGroup/ListGroup.jsx","webpack:///./src/Installation.jsx","webpack:///./src/Components/Nav.jsx","webpack:///./src/Components/Header.jsx","webpack:///./src/Components/Alerts.jsx","webpack:///./src/Components/Buttons.jsx","webpack:///./src/Components/Cards.jsx","webpack:///./src/Components/Drawers.jsx","webpack:///./src/Components/Dropdowns.jsx","webpack:///./src/Components/Icons.jsx","webpack:///./src/Components/ListGroups.jsx","webpack:///./src/Components/Popovers.jsx","webpack:///./src/Components/Tooltips.jsx","webpack:///./src/FourOhFour.jsx","webpack:///./lib/Alert.jsx","webpack:///./lib/factories/SimpleElement.jsx","webpack:///./lib/utils/getDisplayName.js","webpack:///./lib/Toggleable/Toggleable.jsx","webpack:///./lib/Toggleable/index.js","webpack:///./lib/Drawer.js","webpack:///./lib/Dropdown.js","webpack:///./lib/ListGroup/index.js","webpack:///./lib/Modal.jsx","webpack:///./lib/Popover.js","webpack:///./lib/ThemeProvider.jsx","webpack:///./lib/Tooltip.js","webpack:///./lib/index.js","webpack:///./src/Home/Home.jsx","webpack:///./src/Home/index.js","webpack:///./src/Components/Modals.jsx","webpack:///./src/Components/Components.jsx","webpack:///./src/Components/index.js","webpack:///./src/App.jsx","webpack:///./src/index.jsx","webpack:///./src/Home/accessibility.svg","webpack:///./src/Home/bundle.svg","webpack:///./src/Home/merge.svg","webpack:///./src/Home/react.svg","webpack:///./src/Home/home.scss","webpack:///./src/styles.scss"],"names":[],"mappings":"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","file":"app.28a664dc41b9c58f82fa.js","sourcesContent":["/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Jed Watson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nexport default function classNames(...args) {\n  const has = Object.prototype.hasOwnProperty;\n  const classes = [];\n\n  for (let i = 0; i < args.length; i += 1) {\n    const arg = args[i];\n    if (arg) {\n      const argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        const inner = classNames(...arg);\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        Object.keys(arg).forEach(key => {\n          if (has.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        });\n      }\n    }\n  }\n\n  return classes.join(' ');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/classnames.js","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\n\nimport classNames from './utils/classnames';\n\n/**\n * Function to handle removing default Bootstrap box-shadow focus style only on click\n * of button by attaching function to the `onMouseDown` event (which is only\n * fired for mouse events).\n *\n * Function overrides default browser outline css, then attaches a blur\n * listener to element that returns outline control to browser on blur and\n * self destructs listener. This allows the element to regain focus if the\n * user switches to keyboard.\n *\n * _Note that Bootstrap overrides the default browser **outline** to none for button\n * focus and replaces it with a box shadow. This targets that box shadow for click\n * events **only**. On keyboard focus, the default Bootstrap box shadow is still\n * shown. This provides A++ Accessibility for keyboard users._\n * @param {Object} evt React synthetic event\n */\nfunction suppressBoxShadowOnClick(evt) {\n  function blurHandler(event) {\n    // Remove box-shadow override to enable possibility of keyboard focus\n    event.target.style.boxShadow = '';\n    event.target.style.outline = '';\n    // Remove this blur listener\n    event.target.removeEventListener('blur', blurHandler);\n  }\n\n  evt.target.style.boxShadow = 'none';\n  evt.target.style.outline = 'none';\n  evt.target.addEventListener('blur', blurHandler);\n}\n\n/**\n * The `Button` component is the base component for any element that has a user\n * interaction in the library. It is important to use either a button element or a\n * valid href for any click target in order to support keyboard users _(See A++\n * Accessibility Guide)_. In cases where a target that looks like a link is required,\n * but the target is causes an in page change, the `Button` component should be used\n * and passed the `link` property.\n *\n * _NOTE: internally component will call function `suppressBoxShadowOnClick` on the\n * mousedown event, which is only triggered by clicks. This will suppress the default\n * Bootstrap box shadow applied to buttons only on click. Keyboard users will still\n * benefit from the box shadow focus styles.\n * @param {Object} [children]\n * @param {string} [className='']\n * @param {string} [color='']       Pass a color for a contextualized button using color\n * @param {boolean} [large=false]   Pass true to render a size large button\n * @param {boolean} [link=false]    Pass true to render a button that looks like an\n *                                  anchor element (use for A++ Accessibility)\n * @param {?Function} [onMouseDown] Any function passed will be called on mousedown\n *                                  event\n * @param {boolean} [outline=false] Pass true to render an outline style button\n * @param {boolean} [small=false]   Pass true to render a size small button\n * @param {string} [type='button']  Pass a type to override button `type` attribute\n * @return {Component}\n */\nexport default function Button({\n  children,\n  className,\n  color,\n  large,\n  link,\n  outline,\n  small,\n  onMouseDown,\n  ...other\n}) {\n  let mouseDown;\n\n  className = classNames(className, 'btn', {\n    [`btn-${color}`]: color && !outline,\n    'btn-link': link,\n    'btn-unstyled': link,\n    [`btn-outline-${color}`]: outline && color,\n    'btn-lg': large,\n    'btn-sm': small\n  });\n\n  // If an onMouseDown was passed in, call it, then call our blur handler\n  if (onMouseDown) {\n    mouseDown = function mouseDownHandler(evt) {\n      onMouseDown.call(this, evt);\n      suppressBoxShadowOnClick(evt);\n    };\n    // Otherwise just attach our blur handler\n  } else {\n    mouseDown = suppressBoxShadowOnClick;\n  }\n\n  return (\n    <button className={className} onMouseDown={mouseDown} {...other}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  children: node,\n  className: string,\n  color: string,\n  large: bool,\n  link: bool,\n  onMouseDown: func,\n  outline: bool,\n  small: bool,\n  type: string\n};\n\nButton.defaultProps = {\n  children: null,\n  className: '',\n  color: '',\n  large: false,\n  link: false,\n  onMouseDown: null,\n  outline: false,\n  small: false,\n  type: 'button'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Button.jsx","/**\n * Prevent passing invalid props to DOM elements by passing component props not meant\n * for DOM.\n * @export\n * @param {Object} props Props to clean up\n * @param {Array} removeKeys Keys mapping to props to remove\n * @returns {Object} Props object with keys removed\n */\nexport default function cleanProps(props, removeKeys) {\n  const cleaned = Object.assign({}, props);\n  removeKeys.forEach(key => delete cleaned[key]);\n\n  return cleaned;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/clean-props.js","import React from 'react';\nimport { node, string } from 'prop-types';\n\nimport SimpleElement from './factories/SimpleElement';\nimport classNames from './utils/classnames';\n\n/**\n * Card component is a simple wrapper for creating markup for card elements. Includes:\n * - `Card.Block`\n * - `Card.Header`\n * - `Card.Footer`\n */\nexport default function Card({ As, className, children, ...other }) {\n  className = classNames('card', className);\n\n  return (\n    <As className={className} {...other}>\n      {children}\n    </As>\n  );\n}\n\nCard.Body = SimpleElement({ baseClasses: 'card-body' });\nCard.Footer = SimpleElement({ baseClasses: 'card-footer' });\nCard.Header = SimpleElement({ baseClasses: 'card-header' });\nCard.Title = SimpleElement({ baseClasses: 'card-title', tagName: 'h4' });\n\nCard.propTypes = {\n  As: node,\n  children: node,\n  className: string\n};\n\nCard.defaultProps = {\n  As: 'div',\n  children: null,\n  className: ''\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Card.jsx","import React from 'react';\nimport { bool, shape, string } from 'prop-types';\n\nimport getDisplayName from './utils/getDisplayName';\n\n/**\n * Decorator for including aria attributes with components. Decorated components must\n * have a `guid` and `active` prop that can be used with the flags in `arias`.\n * @export\n * @param {React.Component} WrappedComponent Component to decorate with arias\n * @returns {React.Component}\n */\nexport default function ariasHOC(WrappedComponent) {\n  function WithArias({\n    active,\n    arias: {\n      controls,\n      describedby,\n      expanded,\n      haspopup,\n      hidden,\n      id,\n      labelledby,\n      role\n    },\n    guid,\n    ...other\n  }) {\n    return (\n      <WrappedComponent\n        {...other}\n        aria-controls={controls ? guid : null}\n        aria-describedby={describedby ? guid : null}\n        aria-expanded={expanded ? String(active) : null}\n        aria-haspopup={haspopup ? 'true' : null}\n        aria-hidden={hidden ? String(!active) : null}\n        aria-labelledby={labelledby ? guid : null}\n        id={id ? guid : null}\n        role={role}\n      />\n    );\n  }\n\n  WithArias.displayName = `ariasHOC(${getDisplayName(WrappedComponent)})`;\n  WithArias.ROLE = WrappedComponent.ROLE;\n\n  WithArias.propTypes = {\n    active: bool,\n    arias: shape({\n      controls: bool,\n      describedby: bool,\n      expanded: bool,\n      haspopup: bool,\n      hidden: bool,\n      id: bool,\n      labelledby: bool,\n      role: string\n    }),\n    guid: string\n  };\n\n  // guid && active cannot be marked as required b/c the original component never has it set?\n  WithArias.defaultProps = {\n    active: undefined,\n    arias: {\n      controls: false,\n      describedby: false,\n      expanded: false,\n      haspopup: false,\n      hidden: false,\n      id: false,\n      labelledby: false,\n      role: null\n    },\n    guid: undefined\n  };\n\n  return WithArias;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/AriaHOC.jsx","import React from 'react';\nimport { node, string } from 'prop-types';\n\nimport aria from '../AriaHOC';\nimport classNames from '../utils/classnames';\n\n/**\n * Toggleable elements Content component.\n * @export\n * @class Content\n * @extends {Component}\n */\nfunction Content({ As, children, className, elementType, ...other }) {\n  // Bootstrap dropdowns content must be wrapped in an `dropdown-menu` class, other\n  // toggled elements use <ELEMENT>-content\n  className = classNames(className, {\n    [`${elementType}-menu`]: elementType === 'dropdown',\n    [`${elementType}-content`]: elementType !== 'dropdown'\n  });\n\n  return (\n    <As className={className} {...other}>\n      {/* Render a content arrow/tip only for tooltips && popovers */}\n      {elementType === 'tooltip' || elementType === 'popover'\n        ? <div className=\"tip-container\">\n            <div className=\"tip\" />\n          </div>\n        : null}\n      {children}\n    </As>\n  );\n}\n\nContent.ROLE = 'CONTENT';\n\nContent.propTypes = {\n  As: node,\n  children: node,\n  className: string,\n  elementType: string\n};\n\nContent.defaultProps = {\n  As: 'div',\n  children: null,\n  className: '',\n  elementType: ''\n};\n\nexport default aria(Content);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Toggleable/ToggleContent.jsx","import React from 'react';\nimport { bool, element, func, node, oneOfType, string } from 'prop-types';\n\nimport Button from '../Button';\nimport aria from '../AriaHOC';\nimport classNames from '../utils/classnames';\n\n/**\n * Toggleable elements Trigger component.\n * @export\n * @class Trigger\n * @extends {Component}\n */\nfunction Trigger({\n  As,\n  children,\n  className,\n  elementType,\n  link,\n  toggleActive,\n  ...other\n}) {\n  let mouseEnter = null;\n  let mouseLeave = null;\n\n  className = classNames(className, {\n    [`${elementType}-trigger`]: elementType !== 'dropdown',\n    [`${elementType}-toggle`]: elementType === 'dropdown'\n  });\n\n  // Set link defaults if it was not specified\n  if (link === null) {\n    link = !!(elementType === 'drawer' || elementType === 'tooltip');\n  }\n\n  // Events for triggers that active on mouse enter/exit\n  if (elementType === 'tooltip' || elementType === 'popover') {\n    mouseEnter = toggleActive;\n    mouseLeave = toggleActive;\n  }\n\n  return (\n    <As\n      className={className}\n      onMouseEnter={mouseEnter}\n      onMouseLeave={mouseLeave}\n      onClick={toggleActive}\n      link={link}\n      {...other}\n    >\n      {children}\n    </As>\n  );\n}\n\nTrigger.ROLE = 'TRIGGER';\n\nTrigger.propTypes = {\n  As: oneOfType([element, func, node]),\n  children: node,\n  className: string,\n  elementType: string,\n  link: bool,\n  toggleActive: func\n};\n\nTrigger.defaultProps = {\n  As: Button,\n  children: null,\n  className: '',\n  elementType: '',\n  link: null,\n  toggleActive: () => {}\n};\n\nexport default aria(Trigger);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Toggleable/ToggleTrigger.jsx","/**\n * Find the closest DOM parent with the passed `className`. If a matching ancestor\n * is not found return `null`\n * @method closest\n * @param {Object} target    Starting DOM node\n * @param {string} className Class name to filter ancestors against\n * @return {?Object} Closest DOM ancestor when it exists, otherwise null\n */\nexport function closest(target, className) {\n  if (target.classList && target.classList.contains(className)) {\n    return target;\n  }\n  if (target.parentNode) {\n    return closest(target.parentNode, className);\n  }\n  // Default null when no matches are found\n  return null;\n}\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given\n * font in pixels. Kudos to:\n * http://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n * @return {string} The width of the text in a px string format, eg: `'467px'`\n */\nexport function getTextWidth(text, font) {\n  // re-use canvas object for better performance\n  const canvas =\n    getTextWidth.canvas || (getTextWidth.canvas = document.createElement('canvas'));\n  const context = canvas.getContext('2d');\n  context.font = font;\n  const metrics = context.measureText(text);\n  return metrics.width;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/dom.js","import React from 'react';\nimport { bool, string } from 'prop-types';\n\nimport classNames from './utils/classnames';\n\nlet count = 0;\n\n/**\n * Render an SVG icon using an external definition set.\n *\n * ## Default Font Configurations\n * This component is configured to behave as a font icon system by default using the\n * `.font` class. The baseline for the component is adjusted to properly align icons\n * with text.\n *\n * This component can also be used to render font icons as standalone display icons.\n * In these cases, it is typically not desired for the icon baseline to be adjusted,\n * and this can be prevented by passing `font={false}`.\n *\n * ## A++ Accessibility Considerations\n * In order to make SVG font icons as accessible as possible this component:\n * - Includes `role=\"img\"` on the SVG element for older browsers\n * - Maps an `aria-labelledby` attribute on the SVG element to a unique id on the\n *   title element for older browsers.\n * - Falls back to the icon id as the SVG element's `<title>` if no title is passed\n *   to the component.\n *\n * The fallback title is provided to ensure the element has _some_ title for screen\n * readers, however a descriptive title should always be passed in that conveys the\n * intent of the element. For example, an umbrella icon that shows the weather when\n * clicked should have a title like: 'See current weather', instead of a title like\n * 'Umbrella icon'.\n *\n * To Document:\n * - Default filePath configs using context\n * @param {string} [className='']\n * @param {string} [filePath='/assets/svg-defs.svg']\n * @param {Boolean} [font=true]\n * @param {string} icon\n */\nexport default function Icon(\n  { className, filePath, font, icon, title, ...other },\n  context\n) {\n  className = classNames('icon', { font }, icon, className);\n  filePath =\n    filePath || context.componentry_svgDefinitionsFilePath || '/assets/icons.svg';\n  title = title || icon;\n  count += 1;\n  const ariaId = `${icon}-${count}`;\n\n  return (\n    <svg className={className} {...other} role=\"img\" aria-labelledby={ariaId}>\n      <title id={ariaId}>\n        {title}\n      </title>\n      <use href={`${filePath}#${icon}`} />\n    </svg>\n  );\n}\n\nIcon.contextTypes = {\n  componentry_svgDefinitionsFilePath: string\n};\n\nIcon.propTypes = {\n  className: string,\n  filePath: string,\n  font: bool,\n  icon: string.isRequired,\n  title: string\n};\n\nIcon.defaultProps = {\n  className: '',\n  filePath: '',\n  font: true,\n  title: ''\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Icon.jsx","import React from 'react';\nimport { func, node, string } from 'prop-types';\n\nimport Button from '../Button';\nimport classNames from '../utils/classnames';\n\nexport default function ListGroupItem({\n  As,\n  children,\n  className,\n  href,\n  onClick,\n  ...other\n}) {\n  className = classNames('list-group-item', className, {\n    'list-group-item-action': href || onClick\n  });\n\n  if (!As && (href || onClick)) {\n    // If there isn't an As config and component has action, assign correct element\n    As = href ? 'a' : Button;\n  } else {\n    // Fall back to configured As, or fallback fallback to <li>\n    As = As || 'li';\n  }\n\n  return (\n    <As className={className} href={href} onClick={onClick} {...other}>\n      {children}\n    </As>\n  );\n}\n\nListGroupItem.propTypes = {\n  As: node,\n  children: node,\n  className: string,\n  href: string,\n  onClick: func\n};\n\nListGroupItem.defaultProps = {\n  As: null,\n  children: null,\n  className: '',\n  href: null,\n  onClick: null\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ListGroup/ListGroupItem.jsx","import React, { Children } from 'react';\nimport { node, string } from 'prop-types';\n\nimport ListGroupItem from './ListGroupItem';\nimport classNames from '../utils/classnames';\n\n/**\n * To Document:\n * - There are different wrappers for clickable vs non-clickable list groups. (this\n *   seems less than ideal Bootstrap, can we always do a div?)\n * - Only the first child is checked for an href or onClick for perf. If it is variable,\n *   (which is probably not good in the first place), pass a specific As.\n */\nexport default function ListGroup({ As, children, className, ...other }) {\n  className = classNames('list-group', className);\n\n  // If As has been configured, use it regardless\n  if (!As && children) {\n    const { href, onClick } = Children.toArray(children)[0].props;\n    // If children have an href or onClick, we need a div wrapper b/c children will\n    // be either <button> or <a> elements and not <li> elements\n    As = href || onClick ? 'div' : 'ul';\n  } else {\n    As = As || 'ul';\n  }\n\n  return (\n    <As className={className} {...other}>\n      {children}\n    </As>\n  );\n}\n\nListGroup.Item = ListGroupItem;\n\nListGroup.propTypes = {\n  As: node,\n  children: node,\n  className: string\n};\n\nListGroup.defaultProps = {\n  As: null,\n  children: null,\n  className: ''\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ListGroup/ListGroup.jsx","import React from 'react';\n\nexport default function Installation() {\n  return <div>GETTING STARTED!</div>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Installation.jsx","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Nav() {\n  return (\n    <nav>\n      <div>\n        <NavLink to=\"/components/alerts\" activeClassName=\"active\">\n          Alerts\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/buttons\" activeClassName=\"active\">\n          Buttons\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/cards\" activeClassName=\"active\">\n          Cards\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/drawers\" activeClassName=\"active\">\n          Drawers\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/dropdowns\" activeClassName=\"active\">\n          Dropdowns\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/icons\" activeClassName=\"active\">\n          Icons\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/list-groups\" activeClassName=\"active\">\n          List Groups\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/modals\" activeClassName=\"active\">\n          Modals\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/popovers\" activeClassName=\"active\">\n          Popovers\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/components/tooltips\" activeClassName=\"active\">\n          Tooltips\n        </NavLink>\n      </div>\n    </nav>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Nav.jsx","import React from 'react';\nimport { string } from 'prop-types';\n\nexport default function Header({ title }) {\n  title = title.charAt(0).toUpperCase() + title.slice(1);\n\n  return (\n    <div className=\"jumbotron jumbotron-fluid bg-primary\">\n      <div className=\"container\">\n        <h1 className=\"display-3 text-light\">\n          {title}\n        </h1>\n      </div>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  title: string\n};\n\nHeader.defaultProps = {\n  title: 'Components'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Header.jsx","import React from 'react';\nimport { Alert } from '../../lib';\n\nexport default function Alerts() {\n  function logDismiss() {\n    console.log('dismiss');\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <p className=\"lead\">Alert component motivation...</p>\n          <Alert color=\"success\" onDismiss={logDismiss}>\n            <strong>Well done!</strong> You successfully read this important alert\n            message.\n          </Alert>\n          <Alert color=\"info\">\n            <strong>Heads up!</strong> This alert needs your attention, but\n            it&apos;s not super important.\n          </Alert>\n          <Alert color=\"warning\" visibilityTransitionLength={400}>\n            <strong>Warning!</strong> Better check yourself, you&apos;re not looking\n            too good.\n          </Alert>\n          <Alert color=\"danger\" dismissable={false}>\n            <strong>Oh snap!</strong> Change a few things up and try submitting\n            again.\n          </Alert>\n        </div>\n      </div>\n      <div className=\"row my-5\">\n        <div className=\"col\">\n          <h2>Props</h2>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Prop</th>\n                <th>Default</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>className</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>color</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>dismissable</td>\n                <td />\n                <td />\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Alerts.jsx","import React from 'react';\nimport { Button } from '../../lib';\n\nexport default function Buttons() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <p className=\"lead\">Button component motivation...</p>\n        </div>\n        <div className=\"col-6\">\n          <div>\n            <Button color=\"primary\">Primary</Button>\n            <Button color=\"secondary\">Secondary</Button>\n            <Button color=\"success\">Success</Button>\n            <Button color=\"info\">Info</Button>\n            <Button color=\"warning\">Warning</Button>\n            <Button color=\"danger\">Danger</Button>\n            <Button className=\"btn-link\">Link</Button>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <div>\n            <Button color=\"primary\" outline>\n              Primary\n            </Button>\n            <Button color=\"success\" outline>\n              Success\n            </Button>\n            <Button color=\"info\" outline>\n              Info\n            </Button>\n            <Button color=\"warning\" outline>\n              Warning\n            </Button>\n            <Button color=\"danger\" outline>\n              Danger\n            </Button>\n            <Button className=\"btn-link\" outline>\n              Link\n            </Button>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <div>\n            <Button color=\"primary\" large>\n              Large\n            </Button>\n            <Button color=\"primary\" small>\n              Small\n            </Button>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <h4>A++ Acessibility</h4>\n          <p>\n            Text with a 508 accessible button that triggers some application{' '}\n            <Button link>action</Button>\n          </p>\n        </div>\n      </div>\n      <div className=\"row my-5\">\n        <div className=\"col\">\n          <h2>Props</h2>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Prop</th>\n                <th>Default</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>className</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>color</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>large</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>link</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>onMouseDown</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>outline</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>small</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>type</td>\n                <td />\n                <td />\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Buttons.jsx","import React from 'react';\nimport { Button, Card } from '../../lib';\n\nexport default function Cards() {\n  return (\n    <div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12\">\n          <p className=\"lead\">Card component motivation...</p>\n        </div>\n        <div className=\"col-6\">\n          <Card>\n            <Card.Header>Card Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Card title</Card.Title>\n              <p className=\"card-text\">\n                Some quick example text to build on the card title and make up the\n                bulk of the card&apos;s content.\n              </p>\n              <Button color=\"primary\">Go somewhere</Button>\n            </Card.Body>\n            <Card.Footer>2 days ago</Card.Footer>\n          </Card>\n        </div>\n      </div>\n      <div className=\"row my-5\">\n        <div className=\"col\">\n          <h2>Props</h2>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Prop</th>\n                <th>Default</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Card.Header</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>Card.Body</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>Card.Footer</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>Card.Title</td>\n                <td />\n                <td />\n              </tr>\n              <tr>\n                <td>className</td>\n                <td />\n                <td />\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Cards.jsx","import React from 'react';\nimport { Drawer } from '../../lib';\n\nexport default function Drawers() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h2>Drawers</h2>\n        </div>\n        <div className=\"col-6\">\n          <h4>Subcomponents</h4>\n          <Drawer>\n            <Drawer.Trigger>\n              <span className=\"chevron-icon\" /> Toggle Drawer\n            </Drawer.Trigger>\n            <Drawer.Content>\n              The Motion Picture Academy refused to nominate Tron (1982) for a\n              special-effects award because, according to director Steven Lisberger,\n              “The Academy thought we cheated by using computers”\n            </Drawer.Content>\n          </Drawer>\n        </div>\n        <div className=\"col-6\">\n          <h4>Parameter Values</h4>\n          <Drawer Trigger=\"Toggle Drawer\" Content=\"Short hand syntax\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Drawers.jsx","import React, { Component } from 'react';\nimport { Button, Dropdown } from '../../lib';\n\nfunction logActivate() {\n  console.log('on activate called');\n}\nfunction logDeactivate() {\n  console.log('on deactivate called');\n}\n\nexport default class Dropdowns extends Component {\n  state = {\n    controlledActive: false\n  };\n\n  toggleActive = () => {\n    const { controlledActive } = this.state;\n    this.setState({ controlledActive: !controlledActive });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h2>Dropdowns</h2>\n          </div>\n          <div className=\"col-6\">\n            <h4>Uncontrolled Example</h4>\n            <Dropdown onActivate={logActivate} onDeactivate={logDeactivate}>\n              <Dropdown.Trigger color=\"primary\">Dropdown</Dropdown.Trigger>\n              <Dropdown.Content>\n                <h6 className=\"dropdown-header\">Available actions</h6>\n                <Button className=\"dropdown-item\">Item 1</Button>\n                <Button className=\"dropdown-item\">Item 2</Button>\n                <Button className=\"dropdown-item\">Item 3</Button>\n                <div className=\"dropdown-divider\" />\n                <Button className=\"dropdown-item\">Item 4</Button>\n              </Dropdown.Content>\n            </Dropdown>\n          </div>\n          <div className=\"col-6\">\n            <h4>Controlled State Example</h4>\n            <Dropdown\n              active={this.state.controlledActive}\n              onActivate={this.toggleActive}\n              onDeactivate={this.toggleActive}\n            >\n              <Dropdown.Trigger color=\"primary\">Dropdown</Dropdown.Trigger>\n              <Dropdown.Content>\n                <Button className=\"dropdown-item\">Item 1</Button>\n                <Button className=\"dropdown-item\">Item 2</Button>\n                <Button className=\"dropdown-item\">Item 3</Button>\n              </Dropdown.Content>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Dropdowns.jsx","import React from 'react';\nimport { Icon } from '../../lib';\n\nconst devicons = [\n  'react',\n  'git',\n  'github_badge',\n  'javascript',\n  'nodejs',\n  'nodejs_small',\n  'javascript_shield',\n  'bootstrap',\n  'sass',\n  'css3_full',\n  'css3',\n  'html5',\n  'npm',\n  'visualstudio',\n  'rasberry_pi',\n  'nginx',\n  'javascript_badge',\n  'mitlicence',\n  'terminal',\n  'code'\n];\n\nexport default function Icons() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h2>Icons</h2>\n          <p>\n            Componentry doesn&apos;t include font icon assets, but the{' '}\n            <code>&lt;Icon /&gt;</code> component is available for use with SVG\n            sprite assets. TODO: syntax, filePath, baseline customizations\n          </p>\n          <h1>\n            <Icon icon=\"javascript_badge\" /> JavaScript\n          </h1>\n          <h2>\n            <Icon icon=\"javascript_badge\" /> JavaScript\n          </h2>\n          <h3>\n            <Icon icon=\"javascript_badge\" /> JavaScript\n          </h3>\n          <h4>\n            <Icon icon=\"javascript_badge\" /> JavaScript\n          </h4>\n          <p>\n            <Icon icon=\"javascript_badge\" /> JavaScript\n          </p>\n          <h2>Display Icons</h2>\n          <p>\n            <code>{`<Icon />`}</code> can be used for sprited SVGs displayed as\n            standalone icons by resetting the SVG baseline to 0 by passing{' '}\n            <code>{`font={false}`}</code>. The <a>Devicons</a> below highlight using\n            typography class names to easily style icons.\n          </p>\n          <p>\n            <code>\n              {`<Icon icon={id&} font={false&} className=\"display-2 text-muted\" />`}\n            </code>\n          </p>\n          <div className=\"row\">\n            {devicons.map(id =>\n              <div className=\"col-3 my-3 text-center\" key={id}>\n                <Icon icon={id} font={false} className=\"display-2 text-muted\" />\n                <div>\n                  {id}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Icons.jsx","import React from 'react';\nimport { ListGroup } from '../../lib';\n\nfunction testClick() {\n  console.log('click');\n}\n\nexport default function ListGroups() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h2>List Groups</h2>\n          <h4 className=\"mt-3\">Plain Text List</h4>\n          <ListGroup>\n            <ListGroup.Item>Text Only One</ListGroup.Item>\n            <ListGroup.Item>Text Only Two</ListGroup.Item>\n            <ListGroup.Item>Text Only Three</ListGroup.Item>\n          </ListGroup>\n\n          <h4 className=\"mt-3\">Button List</h4>\n          <ListGroup>\n            <ListGroup.Item onClick={testClick}>Button One</ListGroup.Item>\n            <ListGroup.Item onClick={testClick}>Button Two</ListGroup.Item>\n          </ListGroup>\n\n          <h4 className=\"mt-3\">Links List</h4>\n          <ListGroup>\n            <ListGroup.Item href=\"https://facebook.github.io/react/\">\n              Link One\n            </ListGroup.Item>\n            <ListGroup.Item href=\"https://facebook.github.io/react/\">\n              Link Two\n            </ListGroup.Item>\n          </ListGroup>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/ListGroups.jsx","import React from 'react';\nimport { Popover } from '../../lib';\n\nexport default function Popovers() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h2>Popovers</h2>\n        </div>\n        <div className=\"col-12\">\n          <Popover>\n            <Popover.Trigger color=\"primary\" outline>\n              Popover Trigger\n            </Popover.Trigger>\n            <Popover.Content className=\"top\">\n              The new Texas Instrument calculators have ABC keyboards because if\n              they had QWERTY keyboards, they would be considered computers and\n              wouldn’t be allowed for standardized test taking\n            </Popover.Content>\n          </Popover>\n          <Popover>\n            <Popover.Trigger color=\"primary\" outline>\n              Popover Trigger\n            </Popover.Trigger>\n            <Popover.Content className=\"bottom\">\n              The new Texas Instrument calculators have ABC keyboards because if\n              they had QWERTY keyboards, they would be considered computers and\n              wouldn’t be allowed for standardized test taking\n            </Popover.Content>\n          </Popover>\n          <Popover>\n            <Popover.Trigger color=\"primary\" outline>\n              Popover Trigger\n            </Popover.Trigger>\n            <Popover.Content className=\"right\">\n              The new Texas Instrument calculators have ABC keyboards because if\n              they had QWERTY keyboards, they would be considered computers and\n              wouldn’t be allowed for standardized test taking\n            </Popover.Content>\n          </Popover>\n          <Popover>\n            <Popover.Trigger color=\"primary\" outline>\n              Popover Trigger\n            </Popover.Trigger>\n            <Popover.Content className=\"left\">\n              The new Texas Instrument calculators have ABC keyboards because if\n              they had QWERTY keyboards, they would be considered computers and\n              wouldn’t be allowed for standardized test taking\n            </Popover.Content>\n          </Popover>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Popovers.jsx","import React from 'react';\nimport { Tooltip } from '../../lib';\n\nexport default function Tooltips() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h2>Tooltips</h2>\n        </div>\n        <div className=\"col-6\">\n          <h4>Subcomponents</h4>\n          <Tooltip>\n            <Tooltip.Trigger>Tooltip Trigger</Tooltip.Trigger>\n            <Tooltip.Content>\n              Only 8% of the world’s currency is physical money, the rest only\n              exists on computers.\n            </Tooltip.Content>\n          </Tooltip>\n        </div>\n        <div className=\"col-6\">\n          <h4>Parameter Values</h4>\n          <Tooltip\n            Trigger=\"Tooltip trigger\"\n            Content=\"Shorthand invocation method\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Tooltips.jsx","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function FourOhFour() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h3>Page Not Found</h3>\n          <Link to=\"/\">Home</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/FourOhFour.jsx","import React, { Component } from 'react';\nimport { bool, func, number, node, string } from 'prop-types';\n\nimport Button from './Button';\nimport classNames from './utils/classnames';\nimport cleanProps from './utils/clean-props';\n\n/**\n * Alerts provide contextual feedback.\n * To Document:\n * - Internal fallback _hidden method, onDismiss preferred\n * - Internal fade and hidden states\n * - onDismiss and dismissable configurations\n * - alerts only have info classes, not primary or secondary, b/c they are intended\n *   to be used as an actual alert with context, denoted by role=alert. For non-alert\n *   information blocks a card with primary or secondary colors can be used.\n */\nexport default class Alert extends Component {\n  static contextTypes = {\n    visibilityTransitionLength: number\n  };\n\n  static propTypes = {\n    children: node,\n    className: string,\n    color: string,\n    dismissable: bool,\n    onDismiss: func,\n    visibilityTransitionLength: number\n  };\n\n  static defaultProps = {\n    children: null,\n    className: '',\n    color: '',\n    dismissable: true,\n    onDismiss: null,\n    visibilityTransitionLength: null\n  };\n\n  // Fade controls visibility status and hidden controls DOM position status\n  state = {\n    fade: false,\n    hidden: false\n  };\n\n  /**\n   * Backup onDismiss for dismissable alerts without a passed onDismiss. Note that\n   * this is just a convenience method. Passing an `onDismiss` that handles updating\n   * application state to dismiss an alert is preferred.\n   */\n  handleDismiss = () => {\n    // props has precedence to allow for single instance overrides, context can be\n    // used for app wide configs, fall back to defaults\n    const timer =\n      this.props.visibilityTransitionLength ||\n      this.context.visibilityTransitionLength ||\n      300;\n\n    // Will immediately set Bs 'fade' class to transition opacity to 0\n    this.setState({ fade: true });\n    // Roughly when transition is finished, add aria-hidden to element to remove display\n    setTimeout(() => {\n      this.setState({ hidden: true });\n    }, timer);\n  };\n\n  // Render\n  // ---------------------------------------------------------------------------\n  /**\n   * If the alert is dismissable create a close button, otherwise return null\n   * @return {Component|null}\n   */\n  renderClose = color => {\n    const { dismissable } = this.props;\n    let { onDismiss } = this.props;\n    // If alert is dismissable, but an onDismiss wasn't passed, use our internal\n    // fade out\n    onDismiss = onDismiss || this.handleDismiss;\n\n    return dismissable\n      ? <Button\n          link\n          onClick={onDismiss}\n          className=\"close-button\"\n          aria-label=\"close\"\n        >\n          <span className={`close-icon ${color}`} />\n        </Button>\n      : null;\n  };\n\n  render() {\n    const { children, color, ...other } = this.props;\n    let { className } = this.props;\n    const { fade, hidden } = this.state;\n    const { ...dom } = cleanProps(other, [\n      'className',\n      'dismissable',\n      'onDismiss',\n      'visibilityTransitionLength'\n    ]);\n\n    className = classNames('alert', className, {\n      [`alert-${color}`]: color,\n      fade\n    });\n\n    return (\n      <div\n        role=\"alert\"\n        className={className}\n        aria-hidden={hidden ? 'true' : 'false'}\n        {...dom}\n      >\n        <div className=\"alert-content\">\n          {children}\n        </div>\n        {/* Render a close button or null depending on configs */}\n        {this.renderClose(color)}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Alert.jsx","import React from 'react';\nimport { node, string } from 'prop-types';\n\nimport classNames from '../utils/classnames';\n\n/**\n * Factory function returns a FSC with the specified DOM element and base classes.\n * This should be used to create static subcomponents with defaulted class names.\n * @export\n * @param {config} [{ baseClasses, tagName='div' }={}]\n * @returns {Component} React functional stateless component with base classes.\n */\nexport default function({ baseClasses, tagName = 'div', id } = {}) {\n  function SimpleElement({ As, children, className, ...other }) {\n    As = As || tagName;\n    className = classNames(baseClasses, className);\n\n    return (\n      <As className={className} id={id} {...other}>\n        {children}\n      </As>\n    );\n  }\n\n  SimpleElement.propTypes = {\n    As: node,\n    children: node,\n    className: string\n  };\n\n  SimpleElement.defaultProps = {\n    As: null,\n    children: null,\n    className: ''\n  };\n\n  return SimpleElement;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/factories/SimpleElement.jsx","/**\n * Finds a useable display name for a component.\n * @export\n * @param {Component} component\n * @returns {string} Name or display name for component.\n */\nexport default function(component = {}) {\n  return component.displayName || component.name || 'Component';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/getDisplayName.js","import React, { Children, Component, cloneElement } from 'react';\nimport { bool, element, func, node, oneOfType, string } from 'prop-types';\n\nimport ToggleContent from './ToggleContent';\nimport ToggleTrigger from './ToggleTrigger';\nimport classNames from '../utils/classnames';\nimport cleanProps from '../utils/clean-props';\nimport { closest, getTextWidth } from '../utils/dom';\n\nlet count = 0;\n\n/**\n * Inverse Inheritance decorator for creating toggle-able elements. Use with a class\n * with a `toggleActive` method that can be called on `active` change.\n *\n * @export\n * @param {any} [{ contentArias, elementType, triggerArias }={}]\n * @returns {Component} Toggle-able element\n */\nexport default class Toggleable extends Component {\n  static Content = ToggleContent;\n  static Trigger = ToggleTrigger;\n\n  static propTypes = {\n    As: oneOfType([element, func, node]),\n    Content: string,\n    Trigger: string,\n    active: bool,\n    children: node,\n    className: string,\n    onActivate: func,\n    onActivated: func,\n    onDeactivate: func,\n    onDeactivated: func\n  };\n\n  static defaultProps = {\n    As: 'div',\n    Content: '',\n    Trigger: '',\n    active: undefined,\n    children: null,\n    className: '',\n    onActivate() {},\n    onActivated() {},\n    onDeactivate() {},\n    onDeactivated() {}\n  };\n\n  // If active is not passed as a prop, internal state is used for uncontrolled\n  // drawer\n  state = { active: false };\n\n  // Create a unique id for component that can be passed to trigger and menu\n  // for binding aria attrs\n  // NOTE: this won't work in server rendered apps 😣\n  guid = `${this.elementType}-${(count += 1)}`;\n\n  /**\n   * Internal cache for width of tooltip content. Set after calculating content\n   * width and reused on subsequent renders if content text has not changed.\n   */\n  contentWidth = null;\n\n  /**\n   * Internal cache for tooltip content. Used to check if the content has changed\n   * between showings of tooltip.\n   */\n  content = null;\n\n  // The element type, arias and toggleActive properties can be extended to\n  // customize the Toggleable element.\n  elementType = 'toggleable'; // Type of element, customizes display\n  contentArias = {}; // Aria attrs required by content subcomponent\n  triggerArias = {}; // Aria attrs required by trigger subcomponent\n\n  // Methods\n  // ---------------------------------------------------------------------------\n  clickHandler = e => {\n    // If the click was ouside dropdown, close the dropdown and then cleanup the listener\n    if (!closest(e.target, `${this.guid}-container`)) {\n      this.toggleActive();\n    }\n  };\n\n  keyHandler = e => {\n    // Escape key is which 27, when escape key is hit, toggle state\n    if (e.which === 27) {\n      this.toggleActive();\n    }\n  };\n\n  toggleActive = e => {\n    const { onActivate, onActivated, onDeactivate, onDeactivated } = this.props;\n    const { elementType } = this;\n    let { active } = this.props;\n    // Handle uncontrolled drawer\n    if (active === undefined) {\n      active = this.state.active;\n    }\n\n    if (!active) {\n      onActivate(this, e);\n\n      // ========================================================\n      // Handle Toggle Active for Dropdowns and Tooltips\n      // ========================================================\n      if (elementType === 'dropdown') {\n        // If the dropdown is closed, it's now opening, so setup event listeners\n        document.addEventListener('mouseup', this.clickHandler);\n        document.addEventListener('touchend', this.clickHandler);\n        document.addEventListener('keydown', this.keyHandler);\n      }\n\n      if (elementType === 'tooltip' || elementType === 'popover') {\n        // Position absolute tooltip is constrained by the parent width. Set tooltip\n        // width to content width to overflow parent bounds\n        const contentElement = document.getElementById(this.guid);\n        const content = contentElement.innerText;\n        this.content = content;\n\n        if (content === this.content && this.contentWidth) {\n          // If width has already been calculated and content has not changed, use\n          // cached width for performance\n          contentElement.style.width = `${this.contentWidth}px`;\n        } else {\n          // Get all styles of content element, set width and cache\n          const styles = window.getComputedStyle(contentElement);\n          // Get padding, font size and font family of content\n          const width =\n            getTextWidth(content, `${styles.fontSize} ${styles.fontFamily}`) +\n            parseFloat(styles.paddingLeft) +\n            parseFloat(styles.paddingRight) +\n            1;\n\n          contentElement.style.width = `${width}px`;\n          this.contentWidth = width;\n        }\n      }\n    } else {\n      onDeactivate(this, e);\n\n      if (elementType === 'dropdown') {\n        // If the dropdown is open, it's now closing, so remove event listeners\n        document.removeEventListener('mouseup', this.clickHandler);\n        document.removeEventListener('touchend', this.clickHandler);\n        document.removeEventListener('keydown', this.keyHandler);\n      }\n    }\n\n    if (this.props.active === undefined) {\n      // Element is uncontrolled, update internal state\n      // TODO: use callback version of setState for activated/deactivated\n      this.setState({ active: !active });\n    }\n\n    if (!active) {\n      onActivated(this, e);\n    } else {\n      onDeactivated(this, e);\n    }\n  };\n\n  renderChildren(children, active) {\n    const { contentArias, elementType, guid, toggleActive, triggerArias } = this;\n    // Find TRIGGER and CONTENT children and clone with needed props\n    return Children.map(children, child => {\n      if (child.type && child.type.ROLE === 'TRIGGER') {\n        return cloneElement(child, {\n          active,\n          arias: triggerArias,\n          elementType,\n          guid,\n          toggleActive\n        });\n      } else if (child.type && child.type.ROLE === 'CONTENT') {\n        return cloneElement(child, {\n          active,\n          arias: contentArias,\n          elementType,\n          guid\n        });\n      }\n\n      return child;\n    });\n  }\n\n  render() {\n    const { As = 'div', Content, Trigger, children, ...other } = this.props;\n    let { active, className } = this.props;\n    const { contentArias, elementType, guid, toggleActive, triggerArias } = this;\n    const { ...dom } = cleanProps(other, [\n      'active',\n      'className',\n      'onActivate',\n      'onActivated',\n      'onDeactivate',\n      'onDeactivated'\n    ]);\n\n    className = classNames(className, {\n      [elementType]: elementType === 'dropdown',\n      [`${this.guid}-container`]: elementType === 'dropdown',\n      [`${elementType}-container`]: elementType !== 'dropdown'\n    });\n\n    // Default active to controlled prop, if undefined then element is being used as\n    // uncontrolled and we fall back to internal state tracking\n    if (active === undefined) {\n      active = this.state.active;\n    }\n\n    return (\n      <As className={className} {...dom}>\n        {Trigger &&\n          <ToggleTrigger\n            active={active}\n            arias={triggerArias}\n            elementType={elementType}\n            guid={guid}\n            toggleActive={toggleActive}\n          >\n            {Trigger}\n          </ToggleTrigger>}\n        {this.renderChildren(children, active)}\n        {Content &&\n          <ToggleContent\n            active={active}\n            arias={contentArias}\n            elementType={elementType}\n            guid={guid}\n          >\n            {Content}\n          </ToggleContent>}\n      </As>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Toggleable/Toggleable.jsx","import Toggleable from './Toggleable';\n\nexport default Toggleable;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Toggleable/index.js","import Toggleable from './Toggleable';\n\n/**\n * The Drawer component creates an expandable content drawer.\n *\n * TODO: Extend the drawer to accept multiple Target+Content groups to create an\n * accordion.\n *\n * @class Drawer\n * @constructor\n * @extends React.Component\n */\nexport default class Drawer extends Toggleable {\n  elementType = 'drawer';\n  contentArias = { id: true, hidden: true };\n  triggerArias = { controls: true, expanded: true };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Drawer.js","import Toggleable from './Toggleable';\n\n/**\n * The `<Dropdown>` element creates a menu.\n *\n * TODO:\n * - Menu Items with class names 'dropdown-item'\n * - Default focus on open first item\n * - Keydown listener for arrows to navigate through menu items\n */\nexport default class Dropdown extends Toggleable {\n  elementType = 'dropdown';\n  contentArias = { labelledby: true, hidden: true };\n  triggerArias = { expanded: true, haspopup: true, id: true };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Dropdown.js","import ListGroup from './ListGroup';\n\nexport default ListGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ListGroup/index.js","import React, { Component } from 'react';\nimport { bool, func, node } from 'prop-types';\n\nimport SimpleElement from './factories/SimpleElement';\nimport classNames from './utils/classnames';\n\nlet count = 0;\n\n/**\n * TODO:\n * - User hooks\n * - Close button auto-wiring in header\n * - Close on escape** - All toggle items!\n * - Aria attrs\n * - Auto focus on open\n * - Animations on open\n * - Docs on passing flex align-items-center/start to header for close icon alignment\n *\n * @class Modal\n * @extends {Component}\n */\nexport default class Modal extends Component {\n  static Header = SimpleElement({\n    baseClasses: 'modal-header',\n    id: `modal-${count}`\n  });\n  static Body = SimpleElement({ baseClasses: 'modal-body' });\n  static Footer = SimpleElement({ baseClasses: 'modal-footer' });\n\n  static propTypes = {\n    active: bool.isRequired,\n    children: node,\n    large: bool,\n    onDeactivate: func,\n    small: bool\n  };\n\n  static defaultProps = {\n    children: null,\n    large: false,\n    onDeactivate: () => {},\n    small: false\n  };\n\n  // Create a unique id for component that can be passed to trigger and menu\n  // for binding aria attrs\n  // NOTE: this won't work in server rendered apps 😣\n  guid = `modal-${(count += 1)}`;\n\n  render() {\n    const { active, children, large, small, onDeactivate } = this.props;\n    const modalDialogClassNames = classNames('modal-dialog', {\n      'modal-lg': large,\n      'modal-sm': small\n    });\n\n    return (\n      <div\n        aria-hidden={active ? 'false' : 'true'}\n        aria-labelledby={this.guid}\n        className=\"modal fade\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n      >\n        <div\n          aria-hidden={active ? 'false' : 'true'}\n          className=\"modal-backdrop fade\"\n          onClick={onDeactivate}\n          role=\"presentation\"\n        />\n        <div className={modalDialogClassNames} role=\"document\">\n          <div className=\"modal-content\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Modal.jsx","import Toggleable from './Toggleable';\n\n/**\n * The Tooltip component creates an expandable info container on hover.\n *\n * TODO:\n * - Check body overflow on render and adjust width if needed\n * - Dedupe Popover and Tooltip src files\n * - Ability to default configure link and button color for consuming app\n * - Match tooltip and popover tip styles and markup\n * @class Popover\n * @constructor\n * @extends React.Component\n */\nexport default class Popover extends Toggleable {\n  elementType = 'popover';\n  contentArias = { id: true, role: 'tooltip', hidden: true };\n  triggerArias = { describedby: true };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Popover.js","import { Component } from 'react';\nimport { element, number, shape, string } from 'prop-types';\n\n/**\n * The `<ThemeProvider>` is a shorthand for setting context values that can be used\n * for changing the default configuration values used by Componentry components.\n * The passed theme configurations are namespaced to prevent collisions.\n *\n * See the theme propTypes for available configurations.\n *\n * @export\n * @class ThemeProvider\n * @extends {Component}\n */\nexport default class ThemeProvider extends Component {\n  static childContextTypes = {\n    componentry_visibilityTransitionLength: number,\n    componentry_svgDefinitionsFilePath: string\n  };\n\n  static propTypes = {\n    children: element.isRequired,\n    theme: shape({\n      visibilityTransitionLength: number, // Duration of visibility transitions\n      svgDefinitionsFilePath: string // File path used in SVG use href\n    })\n  };\n\n  static defaultProps = {\n    theme: {}\n  };\n\n  /**\n   * Namespace all theme configurations with `componentry_` to prevent any possible\n   * name collisions in consuming apps. Return value to set context for all library\n   * components.\n   */\n  getChildContext() {\n    const { theme } = this.props;\n    const nameSpacedTheme = {};\n\n    Object.keys(theme).forEach(config => {\n      nameSpacedTheme[`componentry_${config}`] = theme[config];\n    });\n\n    return nameSpacedTheme;\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ThemeProvider.jsx","import Toggleable from './Toggleable';\n\n/**\n * The Tooltip component creates an expandable info container on hover.\n *\n * TODO:\n * - Check body overflow on render and adjust width if needed\n * @class Tooltip\n * @constructor\n * @extends React.Component\n */\nexport default class Tooltip extends Toggleable {\n  elementType = 'tooltip';\n  contentArias = { id: true, role: 'tooltip', hidden: true };\n  triggerArias = { describedby: true };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Tooltip.js","export { default as Alert } from './Alert';\nexport { default as Button } from './Button';\nexport { default as Card } from './Card';\nexport { default as Drawer } from './Drawer';\nexport { default as Dropdown } from './Dropdown';\nexport { default as Icon } from './Icon';\nexport { default as ListGroup } from './ListGroup';\nexport { default as Modal } from './Modal';\nexport { default as Popover } from './Popover';\nexport { default as ThemeProvider } from './ThemeProvider';\nexport { default as Tooltip } from './Tooltip';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport accessibleSVG from './accessibility.svg';\nimport bundleSVG from './bundle.svg';\nimport mergeSVG from './merge.svg';\nimport reactLogo from './react.svg';\n\nexport default function Home() {\n  return (\n    <div>\n      <div className=\"hero display-1 text-muted d-flex flex-column align-items-center\">\n        <div>\n          <span className=\"logo bootstrap-logo\">B</span>\n          <span className=\"ml-3 mr-2\">+</span>\n          <img className=\"logo react-logo\" src={reactLogo} alt=\"React\" />\n        </div>\n        <h2 className=\"my-5 text-center w-75\">\n          Lightweight, simple and accessible components built with React and\n          Bootstrap v4\n        </h2>\n      </div>\n      <div className=\"home-nav border border-right-0 border-left-0 d-flex justify-content-center\">\n        <div className=\"m-3\">\n          <Link to=\"/getting-started\">Get Started</Link>\n        </div>\n        <div className=\"m-3\">\n          <Link to=\"/components\">Components</Link>\n        </div>\n        <div className=\"m-3\">\n          <a href=\"https://github.com/crystal-ball/componentry\">Github</a>\n        </div>\n      </div>\n      <div className=\"my-5 row justify-content-center\">\n        <div className=\"col-7 d-flex justify-content-center my-4\">\n          <div>\n            <h3 className=\"feature-header\">Lightweight Bundle Size</h3>\n            <div className=\"media feature\">\n              <img\n                className=\"icon display-3 mr-3\"\n                src={bundleSVG}\n                alt=\"Library bundle size is a small percentage of overall bundle\"\n              />\n              <div className=\"media-body\">\n                <p>\n                  Componentry is optimized for size and performance. With no\n                  external dependencies the library weighs in at 10kB. Advanced\n                  optimizations are possible using targeted ESM and ESNext build\n                  targets.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-7 d-flex justify-content-center my-4\">\n          <div>\n            <h3 className=\"feature-header\">Consistent APIs</h3>\n            <div className=\"media feature\">\n              <div className=\"media-body\">\n                <p>\n                  Spend more time writing and less time checking documentation with\n                  consistent APIs and event hooks across components. Consistent APIs\n                  and focused component concerns make component composition easy.\n                </p>\n              </div>\n              <img\n                className=\"icon display-3 mr-3\"\n                src={mergeSVG}\n                alt=\"Different components utilize the same API\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-7 d-flex justify-content-center my-4\">\n          <div>\n            <h3 className=\"feature-header\">A++ Accessibility</h3>\n            <div className=\"media feature border-bottom-0\">\n              <img\n                className=\"icon display-3 mr-3\"\n                src={accessibleSVG}\n                alt=\"Library focuses on A++ accessibility\"\n              />\n              <div className=\"media-body\">\n                <p>\n                  Components are written using{' '}\n                  <a\n                    href=\"https://www.w3.org/WAI/intro/aria\"\n                    rel=\"noreferrer noopener\"\n                  >\n                    WAI-ARIA\n                  </a>{' '}\n                  roles and attributes for A++ fully accessible components out of\n                  the box. Internal component APIs even handle assigning dynamic\n                  aria attributes on subcomponents.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Home/Home.jsx","import Home from './Home';\nimport './home.scss';\n\nexport default Home;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Home/index.js","import React, { Component } from 'react';\nimport { Button, Modal } from '../../lib';\n\nexport default class Modals extends Component {\n  state = {\n    modalActive: false\n  };\n\n  toggleModal = () => {\n    this.setState({ modalActive: !this.state.modalActive });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Modals</h2>\n        <Button color=\"primary\" onClick={this.toggleModal}>\n          Toggle Modal\n        </Button>\n\n        <Modal active={this.state.modalActive} onDeactivate={this.toggleModal}>\n          <Modal.Header>\n            <h3 className=\"modal-title\">This is the header</h3>\n            <Button className=\"close-button\" link onClick={this.toggleModal}>\n              <span className=\"close-icon\" />\n            </Button>\n          </Modal.Header>\n          <Modal.Body>This is a modal</Modal.Body>\n          <Modal.Footer>\n            <Button color=\"dark\" outline onClick={this.toggleModal}>\n              Close\n            </Button>\n            <Button color=\"primary\">Save Changes</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Modals.jsx","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { object } from 'prop-types';\n\nimport Nav from './Nav';\nimport Header from './Header';\nimport Alerts from './Alerts';\nimport Buttons from './Buttons';\nimport Cards from './Cards';\nimport Drawers from './Drawers';\nimport Dropdowns from './Dropdowns';\nimport Icons from './Icons';\nimport ListGroups from './ListGroups';\nimport Modals from './Modals';\nimport Popovers from './Popovers';\nimport Tooltips from './Tooltips';\n\nexport default function Components({ match }) {\n  const { component } = match.params;\n\n  return (\n    <div>\n      <div className=\"fullscreen-row\">\n        <Header title={component} />\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-9\">\n          <Route path=\"/components/alerts\" component={Alerts} />\n          <Route path=\"/components/buttons\" component={Buttons} />\n          <Route path=\"/components/cards\" component={Cards} />\n          <Route path=\"/components/drawers\" component={Drawers} />\n          <Route path=\"/components/dropdowns\" component={Dropdowns} />\n          <Route path=\"/components/icons\" component={Icons} />\n          <Route path=\"/components/list-groups\" component={ListGroups} />\n          <Route path=\"/components/modals\" component={Modals} />\n          <Route path=\"/components/popovers\" component={Popovers} />\n          <Route path=\"/components/tooltips\" component={Tooltips} />\n        </div>\n        <div className=\"col-3\">\n          <Nav />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nComponents.propTypes = {\n  match: object.isRequired // eslint-disable-line\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Components.jsx","import Components from './Components';\n\nexport default Components;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/index.js","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from '../lib';\n\nimport Home from './Home';\nimport Installation from './Installation';\nimport Components from './Components';\nimport FourOhFour from './FourOhFour';\n\nconst urlBase = process.env.NODE_ENV === true ? '/componentry/' : '/';\n\n// Componentry configuration defaults can be updated using the ThemeProvider\n// component and passing a theme configuration object\n// TODO: Docs\nconst theme = {\n  visibilityTransitionLength: 350,\n  svgDefinitionsFilePath: `${urlBase}assets/icons.svg`\n};\n\nexport default function App() {\n  return (\n    <BrowserRouter basename={urlBase}>\n      <ThemeProvider theme={theme}>\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/getting-started\" component={Installation} />\n            <Route path=\"/components/:component?\" component={Components} />\n            <Route component={FourOhFour} />\n          </Switch>\n        </div>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\n\nimport App from './App';\nimport './styles.scss';\n\nconst render = Component => {\n  ReactDOM.render(\n    <AppContainer>\n      <Component />\n    </AppContainer>,\n    document.getElementById('root')\n  );\n};\n\nrender(App);\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    render(App);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.jsx","module.exports = __webpack_public_path__ + \"accessibility.1dcc04b5.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Home/accessibility.svg\n// module id = 299\n// module chunks = 1","module.exports = __webpack_public_path__ + \"bundle.6e0c137e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Home/bundle.svg\n// module id = 300\n// module chunks = 1","module.exports = __webpack_public_path__ + \"merge.f8c0ab2c.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Home/merge.svg\n// module id = 301\n// module chunks = 1","module.exports = __webpack_public_path__ + \"react.ee61ca49.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Home/react.svg\n// module id = 302\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Home/home.scss\n// module id = 303\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles.scss\n// module id = 305\n// module chunks = 1"],"sourceRoot":""}