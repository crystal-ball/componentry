/*                                 ‚öôÔ∏è Componentry default theme specification
 * -----------------------------------------------------------------------------
 *
 * Motivations & Guidelines:
 *
 * - Use semantic or generic names, eg `primary` is a good generic name
 *   and `container` is a good semantic name. This allows users to have useful
 *   defaults with generics and useful fine tuned customizations with semantic
 *   names.
 * -------------------------------------------------------------------------- */

@import './functions/sass';
@import './functions/lib';

$font-family-primary: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
  'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
  'Segoe UI Symbol' !default;
$font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
  'Courier New', monospace !default;

$theme-defaults: (
  // --------------------------------------------------------
  // Foundation: Colors, Spacing, Typography
  // --- COLORS
  colors:
    (
      'transparent': 'transparent',
      'current': 'currentColor',
      'gray': (
        '100': #eff2f3,
        '200': #d7dfe2,
        '300': #bfcbd1,
        '400': #90a4ae,
        '500': #607d8b,
        '600': #56717d,
        '700': #3a4b53,
        '800': #2b383f,
        '900': #1d262a,
      ),
      primary: (
        '100': #f2f1ff,
        '200': #dfddff,
        '300': #cbc9ff,
        '400': #a4a0ff,
        '500': #7d77ff,
        '600': #716be6,
        '700': #4b4799,
        '800': #383673,
        '900': #26244d,
      ),
      success: (
        '100': #f4f9ed,
        '200': #e4f1d2,
        '300': #d4e8b7,
        '400': #b3d681,
        '500': #93c54b,
        '600': #84b144,
        '700': #58762d,
        '800': #425922,
        '900': #2c3b17,
      ),
      warning: (
        '100': #fdf8ec,
        '200': #fbedcf,
        '300': #f9e2b2,
        '400': #f4cd78,
        '500': #efb73e,
        '600': #d7a538,
        '700': #8f6e25,
        '800': #6c521c,
        '900': #483713,
      ),
      critical: (
        '100': #fbeeed,
        '200': #f6d4d3,
        '300': #f0bab9,
        '400': #e48784,
        '500': #d9534f,
        '600': #c34b47,
        '700': #82322f,
        '800': #622524,
        '900': #411918,
      ),
    ),
  'theme-colors': ('primary', 'success', 'warning', 'critical'),
  // --- SPACING
  spacing:
    (
      '0': 0,
      xs: 0.25rem,
      sm: 0.5rem,
      md: 1rem,
      lg: 2rem,
      xl: 3rem,
    ),
  // --- TYPOGRAPHY
  typography:
    (
      font-families: (
        primary: $font-family-primary,
        monospace: $font-family-monospace,
      ),
      font-sizes: (
        sm: 0.875rem,
        base: 1rem,
        lg: 1.25rem,
      ),
      font-weights: (
        light: 300,
        normal: 400,
        bold: 700,
      ),
      line-heights: (
        single: 1,
        body: 1.5,
      ),
    ),
  // --------------------------------------------------------
  // Details: Breakpoints Borders, Shadows, etc.
  // --- BREAKPOINTS
  // Componentry has a single breakpoint by default, additional breakpoints can
  // be added. 1200px is used for the default to try and ensure all smaller
  // desktops are included. (992, 1200, 1280 are the most common large breakpoints)
  // For multiple breakpoints 768 and 1280 are common breakpoints for md and lg.
  breakpoints:
    (
      lg: 1200px,
    ),
  // --- BORDERS
  borders:
    (
      default: 1px solid #607d8b,
    ),
  border-widths: (),
  radii: (
    default: 4px,
    sm: 2px,
    md: 4px,
    lg: 6px,
  ),
  // --- SHADOWS
  shadows:
    (
      default: 0 0.5rem 1rem rgba(73, 80, 87, 0.15),
    ),
  // --------------------------------------------------------
  // Transitions
  transitions:
    (
      fade: 'opacity 0.25s linear',
    )
);

$theme: () !default;

/// Theme
$theme: map-assign($theme-defaults, $theme);

// --------------------------------------------------------
// Theme functions

/// Convenience function for accessing a theme value by period delimited path
/// @param {string} $path Path to theme value
/// @return {*} Theme value at path
@function theme-get($path) {
  @return get($theme, $path);
}

// --------------------------------------------------------
// Variables

$classes-prefix: üÖ≤- !default;
