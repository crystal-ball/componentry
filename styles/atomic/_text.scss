/* ~componentry/styles/atomic/text */

//
// Text
//

// Sizes

// The .text-sm and text-lg classes are intended for regular text like p, span,
// etc. and provide a utility for minor text adjustments when applications don't
// want to use small headers and small dom elements to handle these types
.text-sm {
  font-size: $font-size-sm;
}

.text-lg {
  font-size: $font-size-lg;
}

// Alignment

.text-justify {
  text-align: justify !important;
}

.text-nowrap {
  white-space: nowrap !important;
}

// Text truncate

@mixin text-truncate() {
  // ℹ️ Requires inline-block or block for proper styling
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-truncate {
  @include text-truncate;
}

// Responsive alignment

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left {
      text-align: left !important;
    }
    .text#{$infix}-right {
      text-align: right !important;
    }
    .text#{$infix}-center {
      text-align: center !important;
    }
  }
}

// Transformation

.text-lowercase {
  text-transform: lowercase !important;
}
.text-uppercase {
  text-transform: uppercase !important;
}
.text-capitalize {
  text-transform: capitalize !important;
}

// Weight and italics

.font-weight-light {
  font-weight: $font-weight-light !important;
}
.font-weight-normal {
  font-weight: $font-weight-normal !important;
}
.font-weight-bold {
  font-weight: $font-weight-bold !important;
}
.font-italic {
  font-style: italic !important;
}

// Decoration

.text-underline {
  text-decoration: underline !important;

  &:hover,
  &:active {
    text-decoration: underline !important;
  }
}

.suppress-text-decoration {
  text-decoration: none !important;

  &:hover,
  &:active {
    text-decoration: none !important;
  }
}

// Contextual colors

.text-white {
  color: $white !important;
}

@mixin text-emphasis-variant($parent, $color) {
  #{$parent} {
    color: $color !important;
  }
  a#{$parent} {
    @include hover-focus {
      color: darken($color, 10%) !important;
    }
  }
}

@each $color, $value in $theme-colors {
  @include text-emphasis-variant('.text-#{$color}', $value);
}

@each $color, $value in $grays {
  @include text-emphasis-variant('.text-gray-#{$color}', $value);
}

.text-body {
  color: $body-color !important;
}
.text-muted {
  color: $text-muted !important;
}

.text-black-50 {
  color: rgba($black, 0.5) !important;
}
.text-white-50 {
  color: rgba($white, 0.5) !important;
}

// Misc

.text-monospace {
  font-family: $font-family-monospace;
}

.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
