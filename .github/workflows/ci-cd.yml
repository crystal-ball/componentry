name: CI/CD
on: [push]

jobs:
  # --- Package testing âœ…
  test:
    name: Continuous Integration
    if: contains(github.event.head_commit.message, 'skip ci') == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.16'
      - name: NPM Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Code Climate - Setup
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Install
        run: CI=true npm ci
      - name: Test
        run: npm test
      - name: Code Climate - Report
        if: success()
        run: |
          export GIT_BRANCH="${GIT_BRANCH:-${GITHUB_REF:11}}"
          ./cc-test-reporter after-build
        env:
          # Add required git env values for code cov reporting, ref:
          # https://docs.codeclimate.com/docs/github-actions-test-coverage
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          GIT_BRANCH: ${{ github.head_ref }}
      - name: Codecov report
        if: success()
        uses: codecov/codecov-action@v1
# --- Package publishing ðŸš€
# publish:
#   name: Continuous Deployment
#   if: github.ref == 'refs/heads/master'
#   needs: test
#   runs-on: ubuntu-latest
#   steps:
#     - uses: actions/checkout@v1
#     - name: Setup Node.js
#       uses: actions/setup-node@v1
#       with:
#         node-version: '12.16'
#     - name: Install
#       run: CI=true npm ci
#     - name: Semantic Release
#       run: npx semantic-release
#       env:
#         GH_TOKEN: ${{ secrets.SEMANTIC_GH_TOKEN }}
#         NPM_TOKEN: ${{ secrets.SEMANTIC_NPM_TOKEN }}
